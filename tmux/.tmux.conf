set -qg default-terminal "screen-256color"
set-option -qg default-shell "$SHELL"

set-window-option -qg xterm-keys on
set-window-option -qg mode-keys vi
set-window-option -qg status-keys vi
set-option -g allow-rename off
set -s escape-time 0
set -qg history-limit 1048576

# Try to accommodate varying range of connection screen sizes
set-option -qg aggressive-resize on
set-option -qg alternate-screen on
#setw -g automatic-rename off

#new-window -n 'some name'

#set-option -g mouse on
#set-option -s set-clipboard on

#set-window-option -g utf8 on
#set fillchars+=stl:\ ,stlnc:\ 
#set -g pane-border-status top
#set -g pane-border-format 'â”€'
#set-option -g status-position top

# Clock mode
set -qg clock-mode-colour colour31
set -qg clock-mode-style 24

unbind C-b
set -qg prefix C-a

bind S choose-tree

bind -n M-t new-window -a -n ' null '
bind -n M-h prev
bind -n M-l next
#bind -n S-M-h  swap-window -t -1
#bind -n S-C-right swap-window -t +1

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind -n M-k \
  set -qg prefix C-b \; \
  set -qg window-status-style bg=colour0,fg=colour0 \; \
  set -qg window-status-current-style bg=colour235,fg=colour31 \; \
  set -qg status-style bg=colour0,fg=colour0 \; \
  set -qg status-left-style bg=colour0,fg=colour0 \; \
  set -qg status-right-style bg=colour0,fg=colour0 \; \
  unbind -n M-i \; \
  unbind -n M-o \; \
  unbind -n M-p \; \
  unbind -n M-n \; \
  unbind -n M-h \; \
  unbind -n M-l \; \
  unbind -n M-t \; \
  unbind -n C-h \; \
  unbind -n C-j \; \
  unbind -n C-k \; \
  unbind -n C-l \; \
  unbind C-v \; \
  run-shell /Users/owl/.config/termcfg/tmux/tmux-battery/battery.tmux

bind -n M-j \
  set -qg prefix C-a \; \
  set -qg window-status-style bg=colour236,fg=colour248 \; \
  set -qg window-status-current-style bg=colour237,fg=colour38 \; \
  set -qg status-style bg=colour234,fg=colour248 \; \
  set -qg status-left-style bg=default,fg=colour244 \; \
  set -qg status-right-style bg=default,fg=colour245 \; \
  bind -n M-i swap-pane -t - \; \
  bind -n M-o swap-pane -t + \; \
  bind -n M-p run "tmux swap-window -t -1 && tmux prev" \; \
  bind -n M-n run "tmux swap-window -t +1 && tmux next" \; \
  bind -n M-h prev \; \
  bind -n M-l next \; \
  bind -n M-t new-window -a -n ' null ' \; \
  bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L" \; \
  bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D" \; \
  bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U" \; \
  bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R" \; \
  bind C-v copy-mode \; \
  run-shell /Users/owl/.config/termcfg/tmux/tmux-battery/battery.tmux

set -qg window-status-separator-bg colour235
set -qg window-status-separator-fg colour235

#set -sg escape-time 0
#bind r source-file ~/.config/.tmux.conf \; display-message "Configuration reloaded"
bind , command-prompt 'rename-window %%'
bind . command-prompt 'rename-session %%'

# bind splits to open in the same working directory as the original
bind s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
#bind c new-window -c "#{pane_current_path}"
bind j resize-pane -D 10
bind k resize-pane -U 10
bind h resize-pane -L 10
bind l resize-pane -R 10

# Move current pane left/right (swap with previous, swap with next)
bind-key -n M-i swap-pane -t -1
bind-key -n M-o swap-pane -t +1

# Move current window left/right (swap with previous, swap with next)
bind-key -n M-p run "tmux swap-window -t -1 && tmux prev"
bind-key -n M-n run "tmux swap-window -t +1 && tmux next"
#bind-key -n M-p swap-window -t -1
#bind-key -n M-n swap-window -t +1

unbind -n C-v;
bind C-v copy-mode		# Activate copy mode on Prefx+C-v
#bind -n C-u copy-mode		# Activate copy mode on Prefx+C-v
bind p paste-buffer		# I don't care about regular Prefix+P binding, I have shift-left/shift-right for that

unbind -T copy-mode-vi Space     ;	bind -T copy-mode-vi v send-keys -X begin-selection
unbind -T copy-mode-vi Enter     ;	bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi C-v       ;	bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
#unbind -T copy-mode-vi [         ;	bind -T copy-mode-vi [ send-keys -X begin-selection
#unbind -T copy-mode-vi ]         ;	bind -T copy-mode-vi ] send-keys -X copy-selection

# Enable clipboard support on Mac
#if-shell 'test "$(uname -s)" = "Darwin" && test -f "$(which reattach-to-user-namespace)"' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh 2&> /dev/null"'



