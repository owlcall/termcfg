set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh

set-window-option -g xterm-keys on
set-window-option -g mode-keys vi
set-option -g allow-rename off
#set-window-option -g utf8 on
#set fillchars+=stl:\ ,stlnc:\ 

unbind C-b
set -g prefix C-a

#set -g status-bg colour24
#setw -g window-status-current-bg colour24

bind -n M-t new-window -a -n '<window>'
bind -n M-h prev
bind -n M-l next
#bind -n S-M-h  swap-window -t -1
#bind -n S-C-right swap-window -t +1

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind -n M-k \
  set -qg status-bg colour0 \; \
  set -qg status-fg colour0 \; \
	set -qg status-left-bg colour0 \; \
	set -qg status-left-fg colour0 \; \
	set -qg status-right-bg colour0 \; \
	set -qg status-right-fg colour0 \; \
  set -qg window-status-separator-bg colour0 \; \
  set -qg window-status-separator-fg colour0 \; \
  set -qg window-status-current-bg colour32 \; \
	set -qg window-status-current-bg colour0 \; \
	set -qg window-status-current-fg colour24 \; \
  set -qg window-status-bg colour0 \; \
  set -qg window-status-fg colour236 \; \
	unbind -n M-h \; \
	unbind -n M-l \; \
	unbind -n M-t \; \
	unbind -n C-h \; \
	unbind -n C-j \; \
	unbind -n C-k \; \
	unbind -n C-l \; \
  unbind C-v \; \
	set -qg prefix C-b
bind -n M-j \
  set -qg status-bg colour235 \; \
  set -qg status-fg colour255 \; \
	set -qg status-left-bg colour233 \; \
	set -qg status-left-fg colour39 \; \
	set -qg status-right-bg colour236 \; \
	set -qg status-right-fg colour244 \; \
  set -qg window-status-separator-bg colour235 \; \
  set -qg window-status-separator-fg colour235 \; \
	set -qg window-status-current-bg colour254 \; \
	set -qg window-status-current-bg colour32 \; \
	set -qg window-status-current-fg colour254 \; \
  set -qg window-status-bg colour238 \; \
  set -qg window-status-fg colour254 \; \
	bind -n M-h prev \; \
	bind -n M-l next \; \
	bind -n M-t new-window -a -c "#{pane_current_path}" \; \
	bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L" \; \
	bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D" \; \
	bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U" \; \
	bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R" \; \
  bind C-v copy-mode \; \
	set -qg prefix C-a

set -qg window-status-separator-bg colour235
set -qg window-status-separator-fg colour235

#set -sg escape-time 0
#bind r source-file ~/.config/.tmux.conf \; display-message "Configuration reloaded"
bind , command-prompt 'rename-window %%'

# bind splits to open in the same working directory as the original
bind s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
#bind c new-window -c "#{pane_current_path}"
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -L 10
bind h resize-pane -R 10

unbind -n C-v;
bind C-v copy-mode		# Activate copy mode on Prefx+C-v
#bind -n C-u copy-mode		# Activate copy mode on Prefx+C-v
bind p paste-buffer		# I don't care about regular Prefix+P binding, I have shift-left/shift-right for that

unbind -T copy-mode-vi Space     ;	bind -T copy-mode-vi v send-keys -X begin-selection
unbind -T copy-mode-vi Enter     ;	bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi C-v       ;	bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind -T copy-mode-vi [         ;	bind -T copy-mode-vi [ send-keys -X begin-selection
unbind -T copy-mode-vi ]         ;	bind -T copy-mode-vi ] send-keys -X copy-selection

# Enable clipboard support on Mac
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

#source-file "$HOME/.config/termcfg/tmux/cyan.tmuxtheme"

